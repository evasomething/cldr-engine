#!/usr/bin/env python

import argparse, os, json, shutil, sys
import requests
from subprocess import Popen

CWD = os.path.abspath(os.path.dirname(__file__))
sys.path.insert(0, os.path.join(CWD, 'patchlib'))

import languagematch
import pluralrange
import rbnf
from util import makedirs

TAG = 'release-36'
#BASEURL = 'https://unicode.org/repos/cldr/tags'
BASEURL = 'https://raw.githubusercontent.com/unicode-org/cldr'
TEMPDIR = os.path.join(CWD, '..', '..', '.cldrpatches')

BUILDERS = [
    languagematch,
    pluralrange,
    rbnf
]

def get_root():
    return os.path.join(TEMPDIR, TAG)

def download():
    realpath = get_root()
    if not os.path.exists(realpath):
        url = os.path.join(BASEURL, TAG, path)
        print(url)
        res = requests.get(url)
        makedirs(os.path.dirname(realpath))
        open(realpath, 'wb').write(res.text.encode('utf-8'))
    return realpath

def process(path, builder, dest):
    print(path)
    realpath = download(path)
    rec = builder(realpath)
    out = open(dest, 'wb')
    res = json.dumps(rec, indent=2, sort_keys=1)
    out.write(res.encode('utf-8'))
    out.close()

def main():
    makedirs(TEMPDIR)
    realpath = download()
    for builder in BUILDERS:
        builder.build(realpath, CWD)

if __name__ == '__main__':
    main()

