#!/usr/bin/env python

import gzip, os, re, sys, zlib
from os.path import abspath, dirname, isdir, join, relpath
from subprocess import Popen, PIPE

import brotli

CWD = dirname(abspath(__file__))
TOP = join(CWD, '..')
PKG = join(TOP, 'packages')
PKGS = os.listdir(PKG)

UGLIFYJS = join(TOP, 'node_modules/.bin/uglifyjs')
RE_LANGS = re.compile('^(JavaScript|JSON)')

def run(cmd):
    p = Popen(cmd, stdout=PIPE)
    out, _ = p.communicate()
    return out

def cloc(path):
    out = run(['cloc', path]).split('\n')
    return [r for r in out if RE_LANGS.match(r)]

def uglify(paths):
    if isinstance(paths, (str,)):
        paths = [paths]
    raw = run([UGLIFYJS] + paths)
    z = zlib.compress(raw, 9)
    br = brotli.compress(raw)
    return (len(raw), len(z), len(br))

def listfiles(top, cond):
    r = []
    for root, dirs, names in os.walk(top):
        for name in names:
            if cond(name):
                r.append(join(root, name))
    return r

def uglifyit(paths):
    raw, z, br = uglify(paths)
    print('           uglify: %d' % raw)
    print('    uglify + gzip: %d' % z)
    print('  uglify + brotli: %d' % br)

def main():
    for pkg in sorted(PKGS):
        pkgpath = abspath(join(PKG, pkg))
        if not isdir(pkgpath) or pkg == 'cldr-compiler':
            continue
        print('Package: %s\n' % pkg)
        libs = join(pkgpath, 'lib')
#        for line in cloc(libs):
#            print(line

        jsfiles = listfiles(libs, lambda f: f.endswith('.js'))
        if jsfiles:
            uglifyit(jsfiles)
            print('')

            # sort by gzip size descending
            files = sorted(((uglify(p), p) for p in jsfiles),
              key=lambda a: a[0][0], reverse=1)
            for f in files:
                data, p = f
                raw, z, _ = data
                relp = relpath(p, libs)
                print('  %6d %6d  %s' % (raw, z, relp))
            print('')

        print('-'*74)
        print('')

    rollup = join(TOP, 'packages/cldr/dist/cldrengine.umd.js')
    raw, z, br = uglify(rollup)
    print('Rollup: cldrengine.umd.js\n')
    uglifyit(rollup)

if __name__ == '__main__':
    main()
